import java.util.*;
public class Sim {
	private int simId;
	private String customerName;
	private double balance;
	private double ratePerSecond;
	private String circle;

    public Sim(int simId, String customerName, double balance, double ratePerSecond, String circle) {
        this.simId = simId;
        this.customerName = customerName;
        this.balance = balance;
        this.ratePerSecond = ratePerSecond;
        this.circle = circle;
    }

    public int getSimId() {
        return simId;
    }
    public String getCustomerName() {
        return customerName;
    }
    public double getBalance() {
        return balance;
    }
    public double getRatePerSecond() {
        return ratePerSecond;
    }
    public String getCircle() {
        return circle;
    }

public void setCircle(String circle) {
        this.circle = circle;
    }
}
public class Solution {
	 public static void main (String args[]) {
         Scanner sc=new Scanner(System.in);
         Sim[] sims=new  Sim[5];
        for (int i = 0; i <sims.length ; i++) {
           int a=sc.nextInt();
           sc.nextLine();
           String b=sc.nextLine();
           double c=sc.nextDouble();          
           double d=sc.nextDouble();
           sc.nextLine();
           String e=sc.nextLine();
           sims[i]  = new Sim(a,b,c,d,e);
        }
       String  circle1=sc.nextLine();
       String  circle2=sc.nextLine();
       sc.close();

      Sim[]  ans =transferCustomerCircle(sims,circle1,circle2);
         if(ans!=null)
         {
             for (int i = 0; i <ans.length ; i++) {
                 System.out.println(ans[i].getSimId()+" "+ans[i].getCustomerName()+" "+ans[i].getCircle()+" "+ans[i].getRatePerSecond());
             }
         }
    }
public static Sim[] transferCustomerCircle(Sim[] sims,String circle1,String circle2)
    {
        Sim [] arr=new Sim[0];
        for (int i = 0; i < sims.length; i++) {
            if(sims[i].getCircle().equals(circle1))
            {
                arr= Arrays.copyOf(arr,arr.length+1);
                arr[arr.length-1]=sims[i];
                arr[arr.length-1].setCircle(circle2);
            }
        }
        for (int i = 0; i<arr.length-1 ; i++) {
            for (int j = 0; j <arr.length-1-i ; j++) {
               if(arr[j].getRatePerSecond()<arr[j+1].getRatePerSecond())
               {
                   Sim temp=arr[j];
                   arr[j]=arr[j+1];
                   arr[j+1]=temp;
               }
            }
        }
       return arr;
    } 
}
